<?xml version='1.0' encoding='UTF-8'?>
<rss version='2.0' xmlns:atom='http://www.w3.org/2005/Atom'>
<channel>
<atom:link href='http://clojureto.github.io' rel='self' type='application/rss+xml'/>
<title>
ClojureTO
</title>
<link>
http://clojureto.github.io
</link>
<description>
Website of the Clojure Community Living and Working in Toronto, Ontario, Canada.
</description>
<lastBuildDate>
Mon, 25 Feb 2019 22:21:15 -0500
</lastBuildDate>
<generator>
clj-rss
</generator>
<item>
<guid>
http://clojureto.github.io/posts-output/2019-02-23-website-behind
</guid>
<link>
http://clojureto.github.io/posts-output/2019-02-23-website-behind
</link>
<title>
What is Behind clojureto.github.io
</title>
<description>
&lt;p&gt;Building a static website never felt so dynamic nowadays. With a basic technical background we can build a low cost website with minimal infra-structure in no time. Tools like &lt;a href='https://jekyllrb.com'&gt;Jekyll&lt;/a&gt; and &lt;a href='https://jbake.org'&gt;JBake&lt;/a&gt; are popular choices, but the Clojure community count on its own solution: &lt;a href='http://cryogenweb.org'&gt;Cryogen&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Cryogen is a static site generator developed in Clojure by &lt;a href='https://carmen.la'&gt;Carmen La&lt;/a&gt;, a member of the ClojureTO community. It allows us to produce content in &lt;a href='https://daringfireball.net/projects/markdown/'&gt;Markdown&lt;/a&gt;, manage content data in Clojure, and make everything beautiful with templates in HTML. It is simple to use and has everything we need. So, here you are reading this content generated by Cryogen.&lt;/p&gt;&lt;p&gt;This website is hosted on &lt;a href='https://pages.github.com'&gt;GitHub Pages&lt;/a&gt;, which offers free hosting for static content, but Jekyll is the only static site generator natively  integrated with GitHub. It means we push content and GitHub takes care of the static content generation. This magic doesn't happen with Cryogen. GitHub offers some configuration alternatives, like recognizing a &lt;code&gt;/doc&lt;/code&gt; folder as the root of the static content, but it isn't true for organizations or projects (organization|project.github.io), where the static content must be in the root of the repository. Until they fix this inconsistency, we had to come up with another solution.&lt;/p&gt;&lt;p&gt;To persist on the idea of using Cryogen, we needed to rearrange the pieces of the game. It consisted of using 2 Git repositories, one for the Cryogen project (&lt;a href='https://github.com/ClojureTO/clojureto-website'&gt;clojureto-website&lt;/a&gt;) and another one for the generated static pages (&lt;a href='https://github.com/ClojureTO/clojureto.github.io'&gt;clojureto.github.io&lt;/a&gt;). The last one is a Git sub-module of the first, replacing the folder &lt;code&gt;resources/public&lt;/code&gt; where the static content is generated.&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;/img/clojureto-website-submodule.png&quot; alt=&quot;Two website repositories&quot; /&gt;&lt;/p&gt;&lt;p&gt;&lt;a href='https://git-scm.com/book/en/v2/Git-Tools-Submodules'&gt;Submodule&lt;/a&gt; is a Git capability that enables a Git repository be a sub-directory of another one while keeping commits separated. In our context, it basically means that pushing commits to &lt;code&gt;clojureto-website&lt;/code&gt; doesn't update the website, but pushing changes generated by Cryogen in the folder &lt;code&gt;resources/public&lt;/code&gt; to &lt;code&gt;clojureto.github.io&lt;/code&gt; does update the website.&lt;/p&gt;&lt;p&gt;To create the submodule, we first had to delete the folder &lt;code&gt;resources\public&lt;/code&gt; and then execute the following commands:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ git submodule add https://github.com/ClojureTO/clojureto.github.io.git resources/public
$ git submodule init
$ git add .gitmodules
$ git add resources/public
$ git commit -m &amp;quot;Added the website repo as a submodule&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In an upcoming post we will explain how to contribute with content to this website without getting lost in the concept of submodule.&lt;/p&gt;
</description>
<pubDate>
Sat, 23 Feb 2019 00:00:00 -0500
</pubDate>
</item>
</channel>
</rss>
